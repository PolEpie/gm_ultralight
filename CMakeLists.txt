cmake_minimum_required (VERSION 3.9)
project (gmsv_ultralight CXX)
#if(CMAKE_COMPILER_IS_GNUCXX)
#    message(STATUS "GCC detected, adding compile flags")
#    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17")
#endif(CMAKE_COMPILER_IS_GNUCXX)
set (CMAKE_CXX_STANDARD 11)
add_compile_definitions("GMMODULE")
include_directories("./include")
if (CMAKE_SYSTEM_NAME MATCHES "Windows")
    set(ULTRALIGHT_LIBRARY_DIR "lib")
else ()
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -ldl")
    set(ULTRALIGHT_LIBRARY_DIR "bin")
endif ()
link_directories("${ULTRALIGHT_LIBRARY_DIR}")
link_libraries(UltralightCore Ultralight WebCore)
#target_include_directories(
   # gmsv_ultralight
   # PUBLIC
   #     "include"
   # )
#set( SOURCE_LIB src )
add_library(gmsv_ultralight SHARED "src/gmsv_ultralight.cpp")
project(tests CXX)
add_executable(tests "src/test.cpp")
#add_custom_command(TARGET tests POST_BUILD
#    COMMAND ${CMAKE_COMMAND} -E copy_directory "bin" $<TARGET_FILE_DIR:tests>)  
set(ultralight "gmsv_ultralight_")
if(WIN32)
	set_target_properties(gmsv_ultralight PROPERTIES OUTPUT_NAME "${ultralight}win64")
	add_compile_definitions("_AMD64_")
elseif(UNIX)
	set_target_properties(gmsv_ultralight PROPERTIES OUTPUT_NAME "${ultralight}linux64")
elseif(APPLE)
	set_target_properties(gmsv_ultralight PROPERTIES OUTPUT_NAME "${ultralight}osx64")
endif()
