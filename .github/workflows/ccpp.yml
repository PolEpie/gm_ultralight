name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build:
    name: ${{ matrix.os }}-${{ matrix.buildtype }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        name: [windows, linux, macosx]
        buildtype: [Release, Debug]
        include:
          - name: windows
            os: windows
            tree: tree /f /a 
            requirements: start ./windows.bat
            premake: |
              curl -L https://github.com/premake/premake-core/releases/download/v5.0.0-alpha15/premake-5.0.0-alpha15-windows.zip -o premakeA
              Expand-Archive premakeA -DestinationPath ./
              ./premake5.exe vs2019
          - name: linux
            os: ubuntu
            tree: |
              sudo apt install tree
              tree -a .
            requirements: source ./linux.sh
            premake: |
              curl -L https://github.com/premake/premake-core/releases/download/v5.0.0-alpha15/premake-5.0.0-alpha15-linux.tar.gz -o premakeA.tar.gz
              tar -xvzf premakeA.tar.gz -C ./
              ./premake5 gmake2
          - name: macosx
            os: macos
            tree: |
              brew install tree
              tree -a
            requirements: source ./macos.sh
            premake: |
              curl -L https://github.com/premake/premake-core/releases/download/v5.0.0-alpha15/premake-5.0.0-alpha15-macosx.tar.gz -o premakeA.tar.gz
              tar -xvzf premakeA.tar.gz -C ./
              ./premake5 gmake2
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    #- run: chmod +x ./headers.bat
    - run: ${{ matrix.requirements }}
    - uses: ilammy/msvc-dev-cmd@v1
    #- name: 'CMake'
    #  uses: lukka/run-cmake@v2
    #  with:
    #    cmakeListsOrSettingsJson: ${{ matrix.cmakeLists }}
    #    useVcpkgToolchainFile: true
    #    cmakeBuildType: ${{ matrix.buildtype }}
    #    buildDirectory: '${{ github.workspace }}/out'
    - run: ${{ matrix.premake }}
    - run: ${{ matrix.tree }}
    - run: "msbuild.exe ${{ github.workspace }}/projects/windows/vs2019/ultralight.sln -p:Configuration=${{ matrix.buildtype }} -p:Platform=x64" #Platform=x64
      if: "contains(matrix.name, 'windows')"
    - run: |
        cd ./projects/${{matrix.name}}/gmake2
        echo starthere
        make config=release_x86_64 all
        echo endhere
        cd ../../../
      if: "!contains(matrix.name, 'windows')&&contains(matrix.buildtype, 'Release')"
    - run: |
        cd ./projects/${{matrix.name}}/gmake2
        echo starthere
        make config=debug_x86_64 all
        echo endhere
        cd ../../../
      if: "!contains(matrix.name, 'windows')&&contains(matrix.buildtype, 'Debug')"
    - name: tree
      run: ${{ matrix.tree }}
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-${{ matrix.buildtype }}
        path: out/*
