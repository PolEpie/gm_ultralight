name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build:
    name: ${{ matrix.os }}-${{ matrix.buildtype }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        name: [windows, ubuntu, macos]
        buildtype: [Release, Debug]
        include:
          - name: windows
            os: windows
            tree: tree /f /a 
            requirements: start ./windows.bat
            cmakeLists: CMakeSettingsJson
            premake: https://github.com/premake/premake-core/releases/download/v5.0.0-alpha15/premake-5.0.0-alpha15-windows.zip
          - name: windows
            buildtype: Release
            artifact: out/Release/Release/gmsv_ultralight_win64.dll
          - name: windows
            buildtype: Debug
            artifact: out/Debug/Debug/gmsv_ultralight_win64.dll
          - name: ubuntu
            os: ubuntu
            artifact: out/libgmsv_ultralight_linux64.so
            tree: |
              sudo apt install tree
              tree -a .
            requirements: source ./linux.sh
            cmakeLists: CMakeListsTxtBasic
            premake: https://github.com/premake/premake-core/releases/download/v5.0.0-alpha15/premake-5.0.0-alpha15-linux.tar.gz
          - name: macos
            os: macos
            artifact: out/libgmsv_ultralight_linux64.dylib
            tree: |
              brew install tree
              tree -a
            requirements: source ./macos.sh
            cmakeLists: CMakeListsTxtBasic
            premake: https://github.com/premake/premake-core/releases/download/v5.0.0-alpha15/premake-5.0.0-alpha15-macosx.tar.gz
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    #- run: chmod +x ./headers.bat
    - run: ${{ matrix.requirements }}
    #- uses: ilammy/msvc-dev-cmd@v1
    #- name: 'CMake'
    #  uses: lukka/run-cmake@v2
    #  with:
    #    cmakeListsOrSettingsJson: ${{ matrix.cmakeLists }}
    #    useVcpkgToolchainFile: true
    #    cmakeBuildType: ${{ matrix.buildtype }}
    #    buildDirectory: '${{ github.workspace }}/out'
    - run: "curl -L ${{matrix.premake}} -o premakeA"
    - uses: montudor/action-zip@v0.1.0
      with:
        args: unzip -qq premakeA -d ./
    - run: premake5 vs2019
    - run: "msbuild.exe SolutionFile.sln /t:Build/p:Configuration=${{ matrix.buildtype }};Platform=x64"
    - name: tree
      run: ${{ matrix.tree }}
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-${{ matrix.buildtype }}
        path: ${{ matrix.artifact }}
