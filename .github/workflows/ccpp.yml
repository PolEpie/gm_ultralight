name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-windows:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - run: chmod +x ./headers.bat
    - run: start ./headers.bat
    - run: set CGO_ENABLED=0
    - uses: ilammy/msvc-dev-cmd@v1
    - run: choco install visualstudio2019buildtools
    - run: choco install visualstudio2019-workload-nativedesktop
    #- uses: lukka/run-vcpkg@v3
      #with:
        # Response file stored in source control, it provides the list of ports and triplet(s).
        #vcpkgArguments: '@${{ env.vcpkgResponseFile }}'
        # Location of the vcpkg as submodule of the repository.
        #vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        # Since the cache must be invalidated when content of the response file changes, let's
        # compute its hash and append this to the computed cache's key.
        #appendedCacheKey: ${{ hashFiles(env.vcpkgResponseFile) }}
    - name: 'Run CMake with Ninja'
      uses: lukka/run-cmake@v2
      with:
        #cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
        useVcpkgToolchainFile: true
        buildDirectory: '${{ runner.workspace }}/b//unixmakefiles'
        cmakeAppendedArgs: '-GNinja -DCMAKE_CXX_COMPILER:FILEPATH=cl.exe'
        cmakeListsOrSettingsJson: CMakeSettingsJson
        cmakeSettingsJsonPath: '${{ github.workspace }}/CMakeSettings.json'
        configurationRegexFilter: '${{ matrix.configuration }}'

    - name: tree
      run: tree /f /a 
    #- name: configure
    #  run: mkdir build && cd build && cmake -DCMAKE_CXX_FLAGS=\"-Werror -std=c++17 -DCMAKE_CXX_COMPILER:FILEPATH=cl.exe \" ..
    #- name: build
    #  run: cmake --build build
  build-linux:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - run: chmod +x ./headers.sh
    - run: source ./headers.sh
    - run: sudo apt install tree
    - run: tree -a .
    - run: set CGO_ENABLED=0
    - name: 'Run CMake with Ninja'
      uses: lukka/run-cmake@v2
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
        useVcpkgToolchainFile: true
        buildDirectory: '${{ runner.workspace }}/b//unixmakefiles'
        cmakeAppendedArgs: '-GNinja '
    #- run: sudo ./headers
    - name: configure
      run: mkdir build && cd build && cmake -DCMAKE_CXX_FLAGS="-Werror -std=c++11" ..
    - name: build
      run: cmake --build build
    - name: tree
      run: tree -a .
    #- name: make
    #  run: make
    #- name: make check
    #  run: make check
    #- name: make distcheck
    #  run: make distcheck
